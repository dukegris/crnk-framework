// RCS
// apply plugin: 'java'
plugins {
	id 'java'
	id 'java-library'
}

dependencies {

    implementation project(':crnk-core')

    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1'
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // RCS unneeded:
    // testImplementation  project(':crnk-core')

    // RCS unneeded:
    // testCompileOnly 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1'
    // testCompileOnly 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    testCompileOnly 'org.apache.deltaspike.modules:deltaspike-test-control-module-api:1.9.6:jakarta'
    testCompileOnly 'com.github.cschabl.cdi-unit-junit5:cdi-unit-junit5:0.4'

    testRuntimeOnly 'org.apache.deltaspike.modules:deltaspike-test-control-module-impl:1.9.6:jakarta'
    testRuntimeOnly 'org.apache.deltaspike.cdictrl:deltaspike-cdictrl-weld:1.9.6'
    testRuntimeOnly 'org.jboss.weld.se:weld-se-core:2.4.0.Final'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT_VERSION"

}

// e.g. CDI expects those directories to be equal
sourceSets {
    main {
        output.resourcesDir = output.classesDirs.singleFile
    }
    test {
        output.resourcesDir = output.classesDirs.singleFile
    }
}
jar {
    duplicatesStrategy = 'exclude'
}
apply plugin: 'idea'
idea {
    module {
        idea.module.inheritOutputDirs = true
    }
}